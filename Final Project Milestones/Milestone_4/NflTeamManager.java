//Made by Daniel Sabanov
package nflteammanager;

import java.util.*;

public class NflTeamManager {

    private Random randomizer = new Random();

    private ArrayList playerList;

    private String getRandomName() {
        String[] name = {"Bob", "John", "Kyle"};
        //Array that stores random names to be picked from at random.

        return name[randomizer.nextInt(name.length - 1)];
        //Randomly picks a name and returns it.
    }

    private String getRandomLastName() {
        String[] lastName = {"Smith", "Johnson", "Wayne"};
        //Array that stores random names to be picked from at random.

        return lastName[randomizer.nextInt(lastName.length - 1)];
        //Randomly picks a name and returns it.
    }

    private String getRandomPosition() {
        String[] position = {"QB", "RB", "WR", "DB", "S", "LB"};
        //Array that stores random positions to be picked from at random.

        return position[randomizer.nextInt(position.length - 1)];
        //Randomly picks a position and returns it.
    }

    private String getRandomTeam() {
        String[] team = {"Cardinals", "Raiders", "Chargers"};
        //Array that stores random team to be picked from at random.

        return team[randomizer.nextInt(team.length - 1)];
        //Randomly picks a position and returns it.
    }

    public NflTeamManager() {
        playerList = new ArrayList();
    }

    public void createPlayer() {
        //Creates a NFLPlayer object and stores it in the ArrayList.

        String lastName = getRandomLastName();
        //Gets a random last name and stores it as lastName.

        String firstName = getRandomName();
        ///Gets a random name and stores it as firstName.

        String position = getRandomPosition();
        //Gets a random position and stores it as position.

        String team = getRandomTeam();
        //Gets a random team and stores it as a position.

        if (position.equals("DB") || position.equals("S") || position.equals("LB")) {
            DefensivePlayer player = new DefensivePlayer(150 + randomizer.nextInt(50)/*Randomizes a height for the player with the lowest value of 150*/,
                    randomizer.nextInt(100), randomizer.nextInt(100),
                    5 + randomizer.nextInt(7)/*Randomizes a height value for the player with the lowest speed of 5*/,
                    20 + randomizer.nextInt(20)/*Randomizes an age value for the player with the lowest age of 20*/,
                    60 + randomizer.nextInt(20)/*Randomizes a weight value for the player with the lowest value of 60*/,
                    firstName, lastName,
                    position, team);
            
                    playerList.add(player);
                    //Adds player to the ArrayList.
      
        }else{
            OffensivePlayer player = new OffensivePlayer(150 + randomizer.nextInt(50)/*Randomizes a height for the player with the lowest value of 150*/,
                    randomizer.nextInt(1000), randomizer.nextInt(1000),
                    5 + randomizer.nextInt(7)/*Randomizes a height value for the player with the lowest speed of 5*/,
                    20 + randomizer.nextInt(20)/*Randomizes an age value for the player with the lowest age of 20*/,
                    60 + randomizer.nextInt(20)/*Randomizes a weight value for the player with the lowest value of 60*/,
                    firstName, lastName,
                    position, team);
                    
            playerList.add(player);
            //Adds player to the ArrayList.
        }
        //Creates the object player.


    }

    @Override
    public String toString() {
        //returns a documentation of all the players created.
        return playerList.toString();
    }

    public static void main(String[] args) {
        //Entering point of the program.

        NflTeamManager manager = new NflTeamManager();
        manager.createPlayers();
        System.out.println(manager.toString());

    }

    public void createPlayers() {

        //Creates 6 player objects.
        for (int i = 0; i < 6; i++) {
            createPlayer();
        }
    }
}




















//    public static void driver() {
//        //Testing method for NFLPlayer class.
//
//        OffensivePlayer player1 = new OffensivePlayer();
//        //creates a new instance of an NFLPlayer through the no argument constructor.
//
//        OffensivePlayer player2 = new OffensivePlayer(1, 2, 3, 4, 5, 6, "Bob", "Smith", "QB", "Cardinals");
//        //creates a new instance of an NFLPlayer through the argumented constructor.
//
//        System.out.println("player1 autogenerated parameters");
//        //Tells for which instance the following output is intended.
//
//        System.out.println(player1.toString());
//        //Shows the values generated by the constructor with no parameters.
//
//        System.out.println("player2 generated parameters");
//        //Tells for which instance the following output is intended.
//
//        System.out.println(player2.toString());
//        //Shows the instance generated by the constructor, as well as tests the toString method.
//
//        System.out.println("computational properties");
//        //Prints what is going to be displayed in the console next
//
//        System.out.println(player2.getPlayerFullName());
//        System.out.println(player2.getPlayerOverallDistance());
//        //Prints out the output of the getter methods that add variables.
//
//        player2.setPlayerHeight(0);
//        player2.setPlayerPassDistance(0);
//        player2.setPlayerRunDistance(0);
//        player2.setPlayerSpeed(0);
//        player2.setPlayerWeight(0);
//        player2.setPlayerAge(0);
//        //Sets all the integer properties to 0 for player2.
//
//        System.out.println("The following should output six zeros");
//        //Prints out what should be the correct output.
//
//        System.out.println(player2.getPlayerHeight());
//        System.out.println(player2.getPlayerPassDistance());
//        System.out.println(player2.getPlayerRunDistance());
//        System.out.println(player2.getPlayerSpeed());
//        System.out.println(player2.getPlayerWeight());
//        System.out.println(player2.getPlayerAge());
//        //Prints all the integers that just have been set to 0 to make sure the 
//        //setters and the getters work as intended.
//
//        System.out.println(player1.toString());
//        //prints the values that are stored in the player1 instance to make sure 
//        //that the values did not change after calling on player2 instance setter methods.
//
//        player2.setPlayerCurrentTeam("Setter for currentTeam works");
//        player2.setPlayerLastName("Setter for lastName works");
//        //Sets 2 of the String to "setter works" to make sure the setter actually works.
//
//        System.out.println(player2.toString());
//        //prints out the values for player2 instance to make sure the changes were made.
//
//    }
//}
